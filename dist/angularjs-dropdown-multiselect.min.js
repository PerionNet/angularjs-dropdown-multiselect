"use strict";var directiveModule=angular.module("angularjs-dropdown-multiselect",[]);directiveModule.directive("ngDropdownMultiselect1",["$filter","$document","$compile","$parse","focus","$sessionStorage",function(e,t,o,n,s,l){return{restrict:"AE",scope:{selectedModel:"=",selectedTempModel:"=",options:"=",extraSettings:"=",events:"=",searchFilter:"=?",translationTexts:"=",groupBy:"@",selectedGroup:"@",showModes:"@",api:"=",isCustomDateOpen:"=",open:"="},template:function(e,t,o){var n=t.checkboxes?!0:!1,s=(t.customdate?!0:!1,'<div class="multiselect-parent btn-group dropdown-multiselect" arrow-selector>');s+='<button id="{{elementId}}_btn" type="button" class="dropdown-toggle" ng-class="settings.buttonClasses" ng-click="toggleDropdown()">{{getButtonText(true)}}&nbsp;<span class="caret"></span></button>',s+='<ul id="{{elementId}}-multiselect-wrapper" class="dropdown-menu dropdown-menu-form" ng-if="open" ng-style="{height : settings.scrollable ? settings.scrollableHeight : \'auto\' }" style="overflow: scroll; display: block;" ',s+='infinite-scroll="addMoreItems()" ',s+='infinite-scroll-container="getInfiniteScrollContainer()" ',s+='infinite-scroll-distance="1" ',s+='infinite-scroll-immediate-check="false" >',s+='<li ng-show="settings.groupBy && settings.showModes" class="group-toggle"><a class="toggle-text" ng-class="{toggleTextSelected: selectedGroupKey}" ng-click="setGroupSelectOption(settings.groupKey)">{{settings.groupKey}} Mode</a>',s+='<a class="toggle-text" ng-class="{toggleTextSelected: !selectedGroupKey}" ng-click="setGroupSelectOption(settings.displayProp)">{{settings.displayProp}} Mode</a></li>',s+='<li ng-show="settings.enableSearch" class="dropdown-search-holder"><div class="dropdown-header"><input ng-change="clearSelectedRow()" id="{{elementId}}_search" type="text" class="form-control search-filter" style="width: 100%;" ng-model="searchFilter" placeholder="{{texts.searchPlaceholder}}" focus-on="focusInput"/></li>',s+='<li ng-show="settings.enableSearch" class="divider"></li>',s+='<li ng-show="settings.enableEmpty"></li>',s+='<li ng-hide="!settings.showCheckAll || settings.selectionLimit > 0"><a data-ng-click="selectAll(); checkedAll = true" id="{{elementId}}_checkAll"><span ng-class="{\'checkbox-ok\': isCheckedAll()}" class="checkbox"></span>{{texts.checkAll}}</a>',s+='<li ng-show="settings.showUncheckAll" class="uncheckAll-separator"><a data-ng-click="deselectAll(); checkedAll = false" id="{{elementId}}_uncheckAll"><span class="checkbox uncheck-all"></span>{{texts.uncheckAll}}</a></li>',s+='<li ng-hide="(!settings.showCheckAll || settings.selectionLimit > 0) && !settings.showUncheckAll" class="divider"></li>',s+='<li class="divider" ng-show="settings.selectionLimit > 1"></li>',s+='<li role="presentation" ng-show="settings.selectionLimit > 1" class="selection-indicator"><a role="menuitem">{{selectedModel.length}} {{texts.selectionOf}} {{settings.selectionLimit}} {{texts.selectionCount}}</a></li>',s+='<li ng-if="groups === true"><ul class="select-option-wrapper">',s+='<li ng-repeat="option in orderedItems | filter: searchFilter" class="multiselector-group-title" ng-class="{\'groupOpenedList\': openGroup}" ng-if="getPropertyForObject(orderedItems[$index], settings.groupBy) !== getPropertyForObject(orderedItems[$index-1], settings.groupBy)">',s+='<a  role="presentation" tabindex="-1" ng-click="groupTitleEvent(getPropertyForObject(option,settings.groupBy), !isCheckedGroup(getPropertyForObject(option,settings.groupBy)))" ng-mouseover="groupHovered=true" ng-mouseout="groupHovered=false">',s+='<span data-ng-class="{\'checkbox-ok\': isCheckedGroup(getPropertyForObject(option,settings.groupBy)), \'checkbox-minus\': isCheckedGroupPart(getPropertyForObject(option,settings.groupBy))}" class="checkbox" ng-click="groupCheckboxEvent(getPropertyForObject(option,settings.groupBy), !isCheckedGroup(getPropertyForObject(option,settings.groupBy)), $event)"></span>',s+=" {{getGroupTitle(getPropertyForObject(option, settings.groupBy)) | limitTo:settings.tooltipNumLimit}}</a> ",s+='<i class="group-arrow" ng-class="{\'arrow-opened\': openGroup}" ng-click="openGroup = !openGroup" ng-show="!selectedGroupKey"></i>',s+='<ul class="group-list"  ng-class="openGroup ? \'group-open\' : \'\'" ng-show="!selectedGroupKey">',s+='<li role="presentation" ng-repeat="option in options | filter: getPropertyForObject(option,settings.groupBy)">',s+='<a id="{{elementId}}_option{{option.id}}" role="menuitem" tabindex="-1" ng-click="setSelectedItem(getPropertyForObject(option,settings.idProp))" tooltip="{{getPropertyForObject(option, settings.displayProp)}}"  ng-class="(getPropertyForObject(option, settings.displayProp).length > settings.tooltipNumLimit) ? \'shorten\' : \'\'" tooltip-enable="getPropertyForObject(option, settings.displayProp).length > settings.tooltipNumLimit">',s+='<span data-ng-class="{\'checkbox-ok\': isChecked(getPropertyForObject(option,settings.idProp))}" class="checkbox"></span>{{getPropertyForObject(option, settings.displayProp)}}</a>',s+="</li></ul>",s+="</li>",s+="</ul></li>",s+='<li ng-if="groups === false"><ul class="select-option-wrapper">',s+='<li role="presentation" ng-repeat="option in options | filter: searchFilter | limitTo: itemsDisplayedInList track by $index " ng-class="{\'dropdown-multiselect-selected\':$index == selectedRow}">',s+='<a id="{{elementId}}_option{{option.id}}" role="menuitem" href="javascript:void(0)" ng-click="setSelectedItem(getPropertyForObject(option,settings.idProp))" tooltip="{{getPropertyForObject(option, settings.displayProp)}}"  ng-class="(getPropertyForObject(option, settings.displayProp).length > settings.tooltipNumLimit) ? \'shorten\' : \'\'" tooltip-enable="getPropertyForObject(option, settings.displayProp).length > settings.tooltipNumLimit">',s+=n?'<div class="checkbox"><label><input class="checkboxInput" type="checkbox" ng-click="checkboxClick($event, getPropertyForObject(option,settings.idProp))" ng-checked="isChecked(getPropertyForObject(option,settings.idProp))" /> {{getPropertyForObject(option, settings.displayProp)}}</label></div></a>':'<span data-ng-class="{\'checkbox-ok\': isChecked(getPropertyForObject(option,settings.idProp))}" class="checkbox"></span> {{getPropertyForObject(option, settings.displayProp) | limitTo:settings.tooltipNumLimit}}</a>',s+="</li>",s+="</ul></li>",s+="</ul>",s+="</div>",e.html(s)},link:function(o,n,l){function i(e){var t={};return""===o.settings.externalIdProp?t[o.settings.idProp]=e:t[o.settings.externalIdProp]=e,t}function r(e){for(var t in e)delete e[t]}var c=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];o.elementId=l.id,o.groups=l.groupBy?!0:!1,o.selectedRow=-1,o.groupSelectOption;var a,d,p,u=n.children()[0];o.toggleDropdown=function(){o.open=!o.open,o.open&&s("focusInput")},o.checkboxClick=function(e,t){o.setSelectedItem(t),e.stopImmediatePropagation()},o.externalEvents={onItemSelect:angular.noop,onItemDeselect:angular.noop,onSelectAll:angular.noop,onDeselectAll:angular.noop,onInitDone:angular.noop,onMaxSelectionReached:angular.noop},o.settings={dynamicTitle:!0,scrollable:!1,scrollableHeight:"300px",closeOnBlur:!0,displayProp:"label",idProp:"id",externalIdProp:"id",enableSearch:!1,selectionLimit:0,showCheckAll:!0,showUncheckAll:!0,closeOnSelect:!1,buttonClasses:"btn btn-default",closeOnDeselect:!1,groupBy:l.groupBy||void 0,showModes:l.showModes||!0,selectedGroup:l.selectedGroup||void 0,groupByTextProvider:null,allowGroupSelect:!0,smartButtonMaxItems:0,smartButtonTextConverter:angular.noop,tooltipNumLimit:30,enableEmpty:!1},o.texts={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"checked",selectionOf:"/",searchPlaceholder:"Search...",buttonDefaultText:"Select",dynamicButtonTextSuffix:"checked",buttonAllDefaultText:null,buttonCustomDateText:null},o.searchFilter=o.searchFilter||"",o.itemsDisplayedInList=20,o.clearSelectedRow=function(e){o.selectedRow=-1},o.openGroup=!1,angular.extend(o.settings,o.extraSettings||[]),angular.extend(o.externalEvents,o.events||[]),angular.extend(o.texts,o.translationTexts),d=o.$watch("translationTexts",function(e){angular.extend(o.texts,e)}),p=o.$watch("extraSettings",function(e){angular.extend(o.settings,e)}),angular.isDefined(o.settings.groupBy)&&(a=o.$watch("options",function(t){angular.isDefined(t)&&(o.orderedItems=e("orderBy")(t,o.settings.groupBy))})),o.api&&"undefined"!=typeof o.api.selectedGroupKey&&(o.selectedGroupKey=o.api.selectedGroupKey[0]),void 0===o.selectedGroupKey&&(o.selectedGroupKey=!0),o.api&&(o.api.selectedGroupSecondaryStorage||(o.api.selectedGroupSecondaryStorage=[])),o.singleSelection=1===o.settings.selectionLimit,o.singleSelection&&angular.isArray(o.selectedModel)&&0===o.selectedModel.length&&r(o.selectedModel),o.clickHandler=function(e){for(var t=e.target.parentElement,n=!1;angular.isDefined(t)&&null!==t&&!n;)"string"==typeof t.className&&_.contains(t.className.split(" "),"multiselect-parent")&&!n&&t===u&&(n=!0),t=t.parentElement;n||o.$apply(function(){o.open=!1})},o.settings.closeOnBlur&&t.on("click.ngDropdownMultiselect",o.clickHandler),o.getGroupTitle=function(e){return null!==o.settings.groupByTextProvider?o.settings.groupByTextProvider(e):e},o.getButtonText=function(e){if(o.settings.dynamicTitle&&(o.selectedModel.length>0||angular.isObject(o.selectedModel)&&_.keys(o.selectedModel).length>0)){if(o.settings.smartButtonMaxItems>0){var t=[];return o.options.length===o.selectedModel.length&&o.texts.buttonAllDefaultText?o.texts.buttonAllDefaultText:o.options[o.selectedModel.id]&&"custom"===o.options[o.selectedModel.id].value?o.texts.buttonCustomDateText:(angular.forEach(o.options,function(n){if(o.isChecked(o.getPropertyForObject(n,o.settings.idProp))){if(o.groups&&o.selectedGroupKey)var s=o.getPropertyForObject(n,o.settings.groupBy);else{var s=o.getPropertyForObject(n,o.settings.displayProp);if(e&&n.displayDate){var l,i,r,a=new Date;if("month"===n.startDate?(l=new Date(a.getFullYear(),a.getMonth(),1),r=a):"lastmonth"===n.startDate?(l=new Date((new Date).setDate((new Date).getDate()-n.startDate)),r=new Date((new Date).setDate((new Date).getDate()-n.endDate))):(l=new Date((new Date).setDate((new Date).getDate()-n.startDate)),i=c[l.getMonth()]+" "+l.getDate()),n.startDate!==n.endDate){r=new Date((new Date).setDate((new Date).getDate()-n.endDate));var d=c[r.getMonth()]+" "+r.getDate();s+=": "+i+" - "+d}else s+=": "+i}}var p=o.settings.smartButtonTextConverter(s,n);t.push(p?p:s)}}),o.groups&&o.selectedGroupKey?(t=_.uniq(t),t.length>o.settings.smartButtonMaxItems&&(t=t.slice(0,o.settings.smartButtonMaxItems),t.push("..."))):o.selectedModel.length>o.settings.smartButtonMaxItems&&(t=t.slice(0,o.settings.smartButtonMaxItems),t.push("...")),t.join(", "))}var n;return n=o.singleSelection?null!==o.selectedModel&&angular.isDefined(o.selectedModel[o.settings.idProp])?1:0:angular.isDefined(o.selectedModel)?o.selectedModel.length:0,0===n?o.texts.buttonDefaultText:n+" "+o.texts.dynamicButtonTextSuffix}return o.texts.buttonDefaultText},o.getPropertyForObject=function(e,t){return angular.isDefined(e)&&e.hasOwnProperty(t)?e[t]:""},o.selectAll=function(e){o.deselectAll(!1),o.externalEvents.onSelectAll(),angular.forEach(o.options,function(e){o.setSelectedItem(e[o.settings.idProp],!0)})},o.deselectAll=function(e){e=e||!0,e&&o.externalEvents.onDeselectAll(),o.singleSelection?r(o.selectedModel):o.selectedModel.splice(0,o.selectedModel.length)},o.selectOrdeselectAll=function(e,t){angular.forEach(o.options,function(n){e&&n[o.settings.groupBy]!==e||o.setSelectedItem(n[o.settings.idProp],t)})},o.selectAllInGroup=function(e,t){angular.forEach(o.options,function(t){t[o.settings.groupBy]===e&&o.setSelectedItem(t[o.settings.idProp],!0)})},o.deselectAllInGroup=function(e,t){o.options.forEach(function(t){if(t[o.settings.groupBy]===e){var n=_.findIndex(o.selectedModel,function(e){return e.id===t.id});n>-1&&o.selectedModel.splice(n,1)}})},o.setSelectedItem=function(e,t){var n=i(e),s=null;if(s=""===o.settings.externalIdProp?_.find(o.options,n):n,o.singleSelection)return r(o.selectedModel),angular.extend(o.selectedModel,s),o.externalEvents.onItemSelect(s),void(o.settings.closeOnSelect&&(o.open=!1));t=t||!1;var l=-1!==_.findIndex(o.selectedModel,n);!t&&l?(o.selectedModel.splice(_.findIndex(o.selectedModel,n),1),o.externalEvents.onItemDeselect(n)):!l&&(0===o.settings.selectionLimit||o.selectedModel.length<o.settings.selectionLimit)&&(o.selectedModel.push(s),o.externalEvents.onItemSelect(s)),o.settings.closeOnSelect&&(o.open=!1)},o.isChecked=function(e){return o.singleSelection?null!==o.selectedModel&&angular.isDefined(o.selectedModel[o.settings.idProp])&&o.selectedModel[o.settings.idProp]===i(e)[o.settings.idProp]:-1!==_.findIndex(o.selectedModel,i(e))},o.isCheckedAll=function(){var e=0;return e=o.orderedItems?o.orderedItems.length:o.options.length,o.selectedModel.length===e},o.isCheckedGroup=function(e){if(o.selectedModel.length>=1){var t=0,n=0;return o.orderedItems.forEach(function(n){n[o.settings.groupBy]===e&&t++}),o.selectedModel.forEach(function(t){t[o.settings.groupBy]===e&&n++}),n===t}return!1},o.isCheckedGroupPart=function(e){if(o.selectedModel.length>=1){var t=0,n=0;return o.orderedItems.forEach(function(n){n[o.settings.groupBy]===e&&t++}),o.selectedModel.forEach(function(t){t[o.settings.groupBy]===e&&n++}),t>n&&n>0}return!1},o.setGroupSelectOption=function(e){if(o.groupSelectOption!==e&&(o.groupSelectOption=e,e===o.settings.groupKey?o.selectedGroupKey=!0:e===o.settings.displayProp?o.selectedGroupKey=!1:"toggle"===e&&(o.selectedGroupKey?o.selectedGroupKey=!1:o.selectedGroupKey=!0),o.api&&"undefined"!=typeof o.api.selectedGroupKey)){o.api.selectedGroupKey=o.selectedGroupKey,o.api.selectedGroupKeyFunction(o.selectedGroupKey);var t=[];t=o.selectedModel.slice(0),o.selectedModel.splice(0,o.selectedModel.length),angular.extend(o.selectedModel,o.selectedTempModel.slice(0)),o.selectedTempModel.splice(0,o.selectedTempModel.length),angular.extend(o.selectedTempModel,t.slice(0))}},o.groupTitleEvent=function(e,t){o.selectedGroupKey?o.selectOrdeselectAll(e,t):this.openGroup=!this.openGroup},o.groupCheckboxEvent=function(e,t,n){o.selectedGroupKey||(o.selectOrdeselectAll(e,t),this.openGroup?this.openGroup=!0:this.openGroup=!1,n.stopPropagation())},o.api&&(o.api.toggleDropdown=function(){o.toggleDropdown()}),o.addMoreItems=function(){o.itemsDisplayedInList+=1},o.getInfiniteScrollContainer=function(){return"#"+o.elementId+"-multiselect-wrapper"},o.clickedRow=function(e){o.options.forEach(function(t){var n=o.getPropertyForObject(t,o.settings.displayProp);n===e&&o.setSelectedItem(t.id)})},"undefined"!=typeof o.settings.selectedGroup&&o.setGroupSelectOption(o.settings.selectedGroup),o.$on("$destroy",function(){u=null,t.off("click.ngDropdownMultiselect",o.clickHandler),a&&a(),d&&d(),p&&p()}),o.externalEvents.onInitDone()}}}]),directiveModule.directive("arrowSelector",["$document",function(e){return{restrict:"A",link:function(t,o,n,s){var l=!1;t.mouseenterHandler=function(){l=!0},t.mouseleaveHandler=function(){l=!1,t.selectedRow=-1},t.keydownHandler=function(e){if(l)if(38==e.keyCode){if(0==t.selectedRow)return;t.selectedRow--,t.$apply(),e.preventDefault()}else if(40==e.keyCode){if(t.selectedRow==t.options.length-1)return;t.selectedRow++,t.$apply(),e.preventDefault()}else if(13==e.keyCode&&t.selectedRow>-1){var n=o.find("li.dropdown-multiselect-selected").children("a").attr("tooltip");t.clickedRow(n),t.$apply(),e.preventDefault()}},o.on("mouseenter.ngDropdownMultiselect",t.mouseenterHandler),o.on("mouseleave.ngDropdownMultiselect",t.mouseleaveHandler),e.bind("keydown.ngDropdownMultiselect",t.keydownHandler),t.$on("$destroy",function(){o.off("mouseenter.ngDropdownMultiselect",t.mouseenterHandler),o.off("mouseleave.ngDropdownMultiselect",t.mouseleaveHandler),e.off("keydown.ngDropdownMultiselect",t.keydownHandler)})}}}]);